# Scan code quality and code coverage

name: SonarQube
on:
  push:
    branches:
      - main
      - master
      - release
      - hotfix
      - staging
  pull_request:
    types: [ opened, synchronize, reopened ]
env:
  # Test environment variables
  TEST_ENV_FILE: ./eticketia-testing/.test.env
  # Time to consider as failed downloading cached dependencies
  SEGMENT_DOWNLOAD_TIMEOUT_MINS: '5'
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    services:
      # Testing database
      db-test:
        image: 'postgres:17.5-alpine'
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: testing
          POSTGRES_USER: myuser
          POSTGRES_PASSWORD: mypassword
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ☕ Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'corretto'
          cache: 'maven'

      - name: ⚙️ Configure environment
        env:
          TEST_ENV_FILE_CONTENT: ${{ secrets.TEST_ENV_CONTENT }}
        run: |
          echo $TEST_ENV_FILE_CONTENT > $TEST_ENV_FILE

      - name: 📚 Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: 📚 Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: 🏗️ Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn -B verify \
          org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dsonar.projectKey=Corusoft_eticketia-backend \
          -Dproject.settings=sonar-project.properties \
          -Ptesting

      - name: 🧹 Clean environment
        run: |
          rm $TEST_ENV_FILE